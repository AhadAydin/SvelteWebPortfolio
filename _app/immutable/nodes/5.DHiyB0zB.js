import"../chunks/DsnmJJEf.js";import{d as u,p as _,f as M,a as j,c as o,s as i,b as F,g as e,e as g,r as a}from"../chunks/chCDLEpG.js";import{I as D,e as A,i as T,P}from"../chunks/BYvHpzYl.js";import{F as V,h as W,a as q}from"../chunks/CIFhQ60m.js";const L="I focus on Full-Stack Development, Computer Vision, and Machine Learning, working with <u>Svelte</u> on the frontend, <u>Django & PostgreSQL</u> on the backend, <u>OpenCV</u> for vision, and <u>PyTorch</u> for ML.";let C=u(!1),p=u(_([])),I=u(0);function m(n,r,s){g(C,s,!0),n&&(g(p,n,!0),g(I,r,!0),console.log("imgs - ",n),console.log("idx - ",r),console.log(e(p)))}let R=[{header:"Firstly, This Web Portfolio",texts:[`
    This portfolio was developed using <a class="font-bold text-amber-200 hover:text-blue-200" href="https://svelte.dev/" target="_blank" rel="external">Svelte</a> and <a class="font-bold text-amber-200 hover:text-blue-200" href="https://threejs.org/" target="_blank" rel="external">Three.js</a>. 
    While I incorporated a visually striking <em>shader</em>, I structured the content 
    like a <em>readable text document</em> to enhance clarity. 
    I aimed for <strong>simplicity</strong> while still allowing interactive elements.
  `],images:["site.png"]},{header:"Rental House Price Predictor",texts:["This project was a collaborative effort with a friend for our Data Mining course. We developed a Python code that scrapes rental apartment data in Istanbul from various real estate websites, storing the collected data in a CSV file. We used Selenium and ChromeDriver for data scraping. The code then processes over twenty features, organizing them for use in the model. It analyzes and predicts prices using various models such as ScikitLearn's random forest and decision tree. During this process, we compare the prediction scores across models to identify the most effective one."],images:["rhp0.png","rhp1.png","rhp2.png"],link:"https://github.com/AhadAydin/Rental-House-Price-Prediction",contribs:[{name:"C4MCI",link:"https://github.com/C4MCI"}]},{header:"Traffic Sign Detector",texts:["I developed this project for a Computer Vision course. The Python code I wrote detects traffic signs in real time using traditional computer vision techniques instead of modern machine learning-based methods. It only uses the openCV's cv2 library to accomplish this. First, it removes unnecessary colors from the image captured by the camera and then applies edge detection. After filtering the image, it performs feature extraction and uses template matching with predefined traffic sign images on the detected objects. While displaying the camera feed, the code draws boxes around the detected signs and labels them in real time."],images:["tsd3.png","tsd1.png","tsd2.png","tsd0.png"],link:"https://github.com/AhadAydin/Traffic-Sign-Detection"},{header:"Graph Generating And Partitioning Algorithms Comparisons",texts:["This project was a collaboration with two friends for the Algorithm Analysis course. While we didn't create algorithms for NP-hard problems, we thoroughly examined existing algorithms, exploring how they function and comparing their performance. The code primarily tests some graph creation algorithms from the NetworkX library. Subsequently, it evaluates various graph partitioning models from the Sklearn library, showcasing their speed and effectiveness. Additionally, we utilized Matplotlib to visually display model comparisons."],images:["gp0.png","gp1.png","gp3.png","gp4.png"],link:"/https://github.com/AhadAydin/Comparing-Graph-Partitioning-Algorithms",contribs:[{name:"sudenazimal",link:"https://github.com/sudenazimal"},{name:"duygukaradadas",link:"https://github.com/duygukaradadas"}]},{header:"An Educational Mobile App For Children",texts:["This project was developed with a classmate for the Android Programming course by using Android Studio. The application is designed to be educational and instructive for children aged 6-8. It encompasses lessons on directions, time, days of the week, and similar topics. Additionally, there are memory and grammar-enhancing games such as picture matching and word recognition. To use the app, users need to create an account, and we employed Firebase for account information, password verification, and tracking earned XP values. The interface is tailored to be dyslexia-friendly, considering color schemes and fonts. This project provided us with significant opportunities for improving our skills in database management and UI design."],images:["ss0-1.png","ss3 (3).png","ss2 (3).png","ss4 (3).png"],link:"https://github.com/AhadAydin/Educational-App-For-Kids",contribs:[{name:"sudenazimal",link:"https://github.com/sudenazimal"}]},{header:"Movie Rating Predictor",texts:["This project, created in collaboration with the same group, was developed for the Data Types and Algorithms course. Written in C++, the code reads a dataset containing information on over 1,000,000 users, movies, and ratings. Using the k-nearest neighbors method, it predicts the ratings users would give to unrated movies. The program employs hashing to store these predictions in a CSV file."],images:["knn.gif"],link:"https://github.com/AhadAydin/Movie-Rating-Predictor",contribs:[{name:"sudenazimal",link:"https://github.com/sudenazimal"},{name:"duygukaradadas",link:"https://github.com/duygukaradadas"}]}],E=[{header:"TCP File Transfer",texts:["A Python project that facilitates file exchange over a local area network using TCP."],images:["tcp.png"],link:"https://github.com/AhadAydin/Broadcasting-And-File-Sharing-With-Python"},{header:"Marching Squares Algorithm",texts:["Marching squares algorithm and visualizer, made with p5.js."],images:["marching.png"],link:"https://github.com/AhadAydin/Marching-Squares-Algorithm-Visualizer"},{header:"P5.js Tic-Tac-Toe",texts:["Playable Tic-Tac-Toe game with an AI opponent, made with p5.js."],images:["tictactoe.png"],link:"https://github.com/AhadAydin/TicTacToe-AI"}];var G=M(`<!> <main class="overflow-hidden"><!> <div class="min-h-screen flex flex-col justify-center items-center text-white"><h1 class="w-[90%] text-center text-white font-bold z-1 
        text-5xl sm:text-5xl md:text-7xl lg:text-8xl
        mt-[36%] sm:mt-[29%] md:mt-[25%] lg:mt-[14%]
        mb-[22%] sm:mb-[19%] md:mb-[12%] lg:mb-[10%]"></h1> <div class="w-[88%] sm:w-[82%] md:w-[76%] lg:w-[60%] flex flex-col justify-center items-center"><p class="w-full text-center text-thin text-lg z-1 mb-16 bg-black/30 backdrop-blur-xl rounded-xs px-4 py-4 "><!></p> <h2 class="w-full text-4xl text-left mb-4 text-white font-bold  z-1 "></h2> <div class="flex flex-col space-y-4 mb-16 w-full"></div> <h2 class="w-full text-4xl text-left mb-4 text-white font-bold  z-1 "></h2> <div class="flex flex-col space-y-4 mb-16 w-full"></div></div></div> <!></main>`,1);function X(n){var r=G(),s=j(r);D(s,{get active(){return e(C)},get images(){return e(p)},get index(){return e(I)},imageViewFunc:m});var f=i(s,2),b=o(f);V(b,{speed:.1,r:.05,g:-.35,b:-.35});var l=i(b,2),v=o(l);v.textContent="Software Development";var x=i(v,2),d=o(x),S=o(d);W(S,()=>L),a(d);var w=i(d,2);w.textContent="Projects";var h=i(w,2);A(h,21,()=>R,T,(c,t)=>{P(c,{get header(){return e(t).header},get texts(){return e(t).texts},get images(){return e(t).images},imageViewFunc:m,get link(){return e(t).link},get contribs(){return e(t).contribs}})}),a(h);var y=i(h,2);y.textContent="Mini Projects";var k=i(y,2);A(k,21,()=>E,T,(c,t)=>{P(c,{get header(){return e(t).header},get texts(){return e(t).texts},get images(){return e(t).images},imageViewFunc:m,get link(){return e(t).link}})}),a(k),a(x),a(l);var z=i(l,2);q(z),a(f),F(n,r)}export{X as component};
